(function (global, factory) {
  if (typeof define === "function" && define.amd) {
    define('radius/header/js/utils', ['exports'], factory);
  } else if (typeof exports !== "undefined") {
    factory(exports);
  } else {
    var mod = {
      exports: {}
    };
    factory(mod.exports);
    global.radiusHeaderJsUtils = mod.exports;
  }
})(this, function (exports) {
  'use strict';

  Object.defineProperty(exports, "__esModule", {
    value: true
  });

  function animate(el, toStyles) {
    return new Promise(function (resolve) {
      var transitionEnd = function transitionEnd(event) {
        //  make sure transition event happens on this element, not on any descendant
        if (event.target === el) {
          resolve();
          el.removeEventListener('transitionend', transitionEnd);
        }
      };
      el.addEventListener('transitionend', transitionEnd);

      forceReflow(el);

      Object.assign(el.style, toStyles);
    });
  }

  function forceReflow(el) {
    var div = document.createElement('div');
    div.innerHTML = el.clientLeft; //  force reflow: necessary to make animations work
  }

  function isEscapeKey(event) {
    return event.which === 27 || event.code === 'Escape' || event.key === 'Escape' || event.keyCode === 27;
  }

  exports.animate = animate;
  exports.forceReflow = forceReflow;
  exports.isEscapeKey = isEscapeKey;
});