(function (global, factory) {
  if (typeof define === "function" && define.amd) {
    define('radius/calculator/js/reducer', ['exports', './actions'], factory);
  } else if (typeof exports !== "undefined") {
    factory(exports, require('./actions'));
  } else {
    var mod = {
      exports: {}
    };
    factory(mod.exports, global.actions);
    global.radiusCalculatorJsReducer = mod.exports;
  }
})(this, function (exports, _actions) {
  'use strict';

  Object.defineProperty(exports, "__esModule", {
    value: true
  });


  function reducer() {
    var state = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};
    var action = arguments[1];

    if (action.type === _actions.UPDATE_LOAN_AMOUNT) {
      var errorMessage = '';
      var disabled = false;

      if (action.loanAmount < state.minLoanAmount) {
        errorMessage = 'amount is below minimum allowed';
        disabled = true;
      } else if (action.loanAmount > state.maxLoanAmount) {
        errorMessage = 'amount is above maximum allowed';
        disabled = true;
      }

      return Object.assign({}, state, {
        loanAmount: action.loanAmount,
        errorMessage: errorMessage,
        disabled: disabled
      });
    }

    if (action.type === _actions.UPDATE_TERM) {
      return Object.assign({}, state, {
        loanTerm: action.loanTerm
      });
    }

    return state;
  }

  exports['default'] = reducer;
});