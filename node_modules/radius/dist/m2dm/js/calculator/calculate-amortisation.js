(function (global, factory) {
  if (typeof define === "function" && define.amd) {
    define("radius/calculator/js/calculate-amortisation", ["exports"], factory);
  } else if (typeof exports !== "undefined") {
    factory(exports);
  } else {
    var mod = {
      exports: {}
    };
    factory(mod.exports);
    global.radiusCalculatorJsCalculateAmortisation = mod.exports;
  }
})(this, function (exports) {
  "use strict";

  Object.defineProperty(exports, "__esModule", {
    value: true
  });
  var MONTHS_IN_YEAR = 12;
  var ratesPerTerm = {
    6: { interestRate: 0.045, completionRate: 0.015 },
    12: { interestRate: 0.055, completionRate: 0.025 },
    24: { interestRate: 0.050, completionRate: 0.03 },
    36: { interestRate: 0.053, completionRate: 0.035 },
    48: { interestRate: 0.056, completionRate: 0.04 },
    60: { interestRate: 0.059, completionRate: 0.045 }
  };

  function calculateAmortisedValue(loanAmount, loanTerm) {
    var _ratesPerTerm$loanTer = ratesPerTerm[loanTerm],
        completionRate = _ratesPerTerm$loanTer.completionRate,
        interestRate = _ratesPerTerm$loanTer.interestRate;

    var interestRatePerMonth = interestRate / MONTHS_IN_YEAR;
    var completionFee = loanAmount * completionRate;
    var loanWithFees = loanAmount + completionFee;
    var denominator = Math.pow(1 + interestRatePerMonth, loanTerm) - 1;

    var monthlyPayments = loanWithFees * (interestRatePerMonth / denominator + interestRatePerMonth);
    var totalInterest = monthlyPayments * loanTerm - loanWithFees;
    var totalCost = loanWithFees + totalInterest;

    return {
      monthlyPayments: Math.round(monthlyPayments),
      totalCost: Math.round(totalCost),
      completionFee: Math.round(completionFee),
      interestFee: Math.round(totalInterest)
    };
  }
  exports["default"] = calculateAmortisedValue;
});