(function (global, factory) {
  if (typeof define === "function" && define.amd) {
    define('radius/card-ticker/js/index', ['exports'], factory);
  } else if (typeof exports !== "undefined") {
    factory(exports);
  } else {
    var mod = {
      exports: {}
    };
    factory(mod.exports);
    global.radiusCardTickerJsIndex = mod.exports;
  }
})(this, function (exports) {
  'use strict';

  Object.defineProperty(exports, "__esModule", {
    value: true
  });

  exports['default'] = function () {
    var cardTicker = document.querySelector('[data-js-card-ticker]');

    if (!cardTicker) {
      return;
    }

    var cardTickerCarousel = cardTicker.querySelector('[data-js-card-ticker-carousel]');
    var url = cardTicker.dataset.jsCardTickerSource;

    var removeComponent = function removeComponent(component) {
      var componentParent = component.parentNode;

      componentParent.removeChild(component);
    };

    var cardTickerItem = function cardTickerItem(fetchedData) {
      return '\n    <div class="card-ticker__item" data-js-card-ticker-item>\n      <p class="card-ticker__item-content">' + fetchedData + '</p>\n    </div>\n  ';
    };

    fetch(url).then(function (response) {
      if (response.ok) {
        return response.text();
      }

      return Promise.reject();
    }).then(function (cardTickerData) {
      var firstCardItem = void 0;

      var lines = cardTickerData.split('\n').filter(function (line) {
        return line.length > 0;
      });

      if (!lines.length) {
        removeComponent(cardTicker);
        return;
      }

      lines.forEach(function (line) {
        var regex = /\*(.+?)\*/g;

        var formattedLine = line.replace(regex, function (match, textToBold) {
          return '<strong>' + textToBold + '</strong>';
        }).trim();

        cardTickerCarousel.innerHTML += cardTickerItem(formattedLine);
      });

      cardTickerCarousel.addEventListener('animationiteration', function () {
        firstCardItem = cardTickerCarousel.querySelectorAll('[data-js-card-ticker-item]')[0]; // eslint-disable-line prefer-destructuring

        cardTickerCarousel.appendChild(firstCardItem);
      });
    })['catch'](function () {
      removeComponent(cardTicker);
    });
  };
});