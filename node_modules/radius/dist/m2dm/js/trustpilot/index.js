(function (global, factory) {
  if (typeof define === "function" && define.amd) {
    define('radius/trustpilot/js/index', ['exports'], factory);
  } else if (typeof exports !== "undefined") {
    factory(exports);
  } else {
    var mod = {
      exports: {}
    };
    factory(mod.exports);
    global.radiusTrustpilotJsIndex = mod.exports;
  }
})(this, function (exports) {
  'use strict';

  Object.defineProperty(exports, "__esModule", {
    value: true
  });

  exports['default'] = function () {
    var isLocalDataExpired = function isLocalDataExpired(data, lastUpdated) {
      if (!data || !lastUpdated) return false;

      var dataExpirationTime = 1000 * 60 * 60 * 24 * 1; // refresh every 1 days
      var dataExpired = Date.now() > lastUpdated + dataExpirationTime;

      return dataExpired;
    };

    var getLocalData = function getLocalData() {
      var localData = JSON.parse(localStorage.getItem('trustpilot_api_data'));
      var localDataLastUpdated = Number(localStorage.getItem('trustpilot_api_data_last_updated'));
      var localDataExpired = isLocalDataExpired(localData, localDataLastUpdated);

      return {
        localData: localData,
        localDataExpired: localDataExpired
      };
    };

    var setLocalData = function setLocalData(data) {
      localStorage.setItem('trustpilot_api_data', JSON.stringify(data));
      localStorage.setItem('trustpilot_api_data_last_updated', Date.now());
    };

    var removeAllComponents = function removeAllComponents(components) {
      components.forEach(function (item) {
        item.parentNode.removeChild(item);
      });
    };

    var fetchTrustPilotData = function fetchTrustPilotData() {
      var dataPath = 'https://api.trustpilot.com/v1/business-units/4fa92f2600006400051522e5';
      var tpApiKey = 'AV9QXFKuib9jYaJ2z1M5ukg8QQYB31l1';
      var url = dataPath + '?apikey=' + tpApiKey;

      return fetch(url).then(function (response) {
        return response.json();
      }).then(function (data) {
        setLocalData(data);
        return data;
      });
    };

    var renderTrustPilotComponents = function renderTrustPilotComponents(data, components) {
      // remove all components if the stars count has dropped to 3 or below
      if (data.stars <= 3) {
        removeAllComponents(components);
        return;
      }

      components.forEach(function (item) {
        var stars = Array.from(item.querySelectorAll('[data-js-trustpilot-stars]'));
        var reviewCount = Array.from(item.querySelectorAll('[data-js-trustpilot-review-count]'));
        var trustscore = Array.from(item.querySelectorAll('[data-js-trustpilot-trustscore]'));
        var headlineRating = Array.from(item.querySelectorAll('[data-js-trustpilot-headline-rating]'));

        stars.forEach(function (el) {
          el.innerHTML = '';

          for (var i = 0; i < data.stars; i++) {
            var img = document.createElement('span');
            img.className = 'trustpilot__star';
            el.appendChild(img);
          }
        });

        reviewCount.forEach(function (el) {
          return el.textContent = data.numberOfReviews.total;
        }); // eslint-disable-line no-return-assign
        trustscore.forEach(function (el) {
          return el.textContent = data.trustScore;
        }); // eslint-disable-line no-return-assign
        headlineRating.forEach(function (el) {
          // eslint-disable-line no-return-assign
          var text5stars = el.getAttribute('data-content-5stars');
          var text4stars = el.getAttribute('data-content-4stars');

          if (data.stars === 5) {
            el.textContent = text5stars;
          } else if (data.stars === 4) {
            el.textContent = text4stars;
          }
        });

        item.classList.add('is-visible');
      });
    };

    var start = function start() {
      var components = Array.from(document.querySelectorAll('[data-js-trustpilot-api]'));
      // if there's no trustpilot components, abort here
      if (!components.length) return;

      var _getLocalData = getLocalData(),
          localData = _getLocalData.localData,
          localDataExpired = _getLocalData.localDataExpired;

      if (localData && !localDataExpired) {
        renderTrustPilotComponents(localData, components);
      } else {
        fetchTrustPilotData().then(function (data) {
          return renderTrustPilotComponents(data, components);
        })['catch'](function (err) {
          removeAllComponents(components);
          throw new Error(err);
        });
      }
    };

    return {
      getLocalData: getLocalData,
      setLocalData: setLocalData,
      isLocalDataExpired: isLocalDataExpired,
      fetchTrustPilotData: fetchTrustPilotData,
      renderTrustPilotComponents: renderTrustPilotComponents,
      start: start
    };
  };
});