(function (global, factory) {
  if (typeof define === "function" && define.amd) {
    define('radius/modal/js/index', ['exports', 'a11y-dialog'], factory);
  } else if (typeof exports !== "undefined") {
    factory(exports, require('a11y-dialog'));
  } else {
    var mod = {
      exports: {}
    };
    factory(mod.exports, global.a11yDialog);
    global.radiusModalJsIndex = mod.exports;
  }
})(this, function (exports, _a11yDialog) {
  'use strict';

  Object.defineProperty(exports, "__esModule", {
    value: true
  });

  var _a11yDialog2 = _interopRequireDefault(_a11yDialog);

  function _interopRequireDefault(obj) {
    return obj && obj.__esModule ? obj : {
      default: obj
    };
  }

  exports['default'] = function () {
    var _ref = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {},
        _ref$animationsOn = _ref.animationsOn,
        animationsOn = _ref$animationsOn === undefined ? true : _ref$animationsOn;

    var BODY_CLASS_NAME = 'modal-open';
    var ANIMATION_DURATION = 0.4;
    var modalEls = Array.from(document.querySelectorAll('[data-js-modal]'));
    var OPEN_SELECTOR = 'data-js-modal-open';
    var CLOSE_SELECTOR = 'data-js-modal-close';

    var fromStyles = {
      opacity: 0
    };
    var toStyles = {
      opacity: 1
    };

    function onShow(modal) {
      Object.assign(modal.style, toStyles);
      document.body.classList.add(BODY_CLASS_NAME);

      modal.dispatchEvent(new Event('modalShow'));
    }

    function onHide(modal) {
      document.body.classList.remove(BODY_CLASS_NAME);

      modal.dispatchEvent(new Event('modalHide'));
    }

    function showButtonSelector(id) {
      return '[' + OPEN_SELECTOR + '=' + id + ']';
    }

    var isYouTubeAPIReady = false;

    window.onYouTubeIframeAPIReady = function () {
      isYouTubeAPIReady = true;
    };

    modalEls.forEach(function (el) {
      //  doing animations entirely within Javascript
      if (animationsOn) {
        el.style.transition = ANIMATION_DURATION + 's all ease-in-out';
      }

      var player = void 0;
      var modal = new _a11yDialog2['default'](el);
      var openButtons = Array.from(document.querySelectorAll(showButtonSelector(el.id)));
      var closeButtons = Array.from(el.querySelectorAll('[' + CLOSE_SELECTOR + ']'));
      //  also have to handle overlay clicks

      // move the modal to sit just before the closing body tag,
      // so that aria-hidden tags get added to all siblings
      // unless it needs to maintain current position in the document
      if (el.dataset.jsModal !== 'no-move') {
        document.body.appendChild(el);
      }

      el.style.opacity = 0;

      openButtons.forEach(function (openButton) {
        openButton.addEventListener('click', function (e) {
          var currentModalId = openButton.dataset.jsModalOpen;
          var elCurrentModal = document.getElementById(currentModalId);

          e.preventDefault();
          modal.show();

          if (elCurrentModal.dataset.jsContent === 'video' && isYouTubeAPIReady) {
            var elPlayer = elCurrentModal.querySelectorAll('[data-js-player]')[0];
            var playerId = elPlayer.id;

            // Initiate the player object with the corresponding ID
            // after the API code downloads.
            if (!player) {
              player = new YT.Player(playerId);
            }
          }
        });
      });

      closeButtons.forEach(function (closeButton) {
        closeButton.addEventListener('click', function () {
          Object.assign(el.style, fromStyles);

          if (animationsOn) {
            el.addEventListener('transitionend', function transitionEnd(event) {
              if (event.target === el) {
                // ignore transition events fired by children
                el.removeEventListener('transitionend', transitionEnd);
                modal.hide();
              }
            });
          } else {
            modal.hide();
          }

          if (el.dataset.jsContent === 'video') {
            if (!player) {
              return;
            }
            player.stopVideo();
          }
        });
      });

      modal.on('show', onShow);
      modal.on('hide', onHide);
    });
  };
});