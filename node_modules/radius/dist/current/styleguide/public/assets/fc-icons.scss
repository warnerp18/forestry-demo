/**
 * section: current/icons
 * title: Icons
 * layout: icons
 *
 * description: Add the class to load the icon.
 *
 * icons: 
 *   - fci-go-to-arrow
 *   - fci-menu-icon
 *   - fci-tick
 *   - fci-user-circled
 *   - fci-phone-circled
 *   - fci-attention
 *   - fci-info-circled
 *   - fci-close
 *   - fci-transaction
 *   - fci-dollar-sign
 *   - fci-download-circled
 *   - fci-arrow-full-right
 *   - fci-search
 *   - fci-stats
 *   - fci-pound-sign
 *   - fci-user
 *   - fci-pencil
 *   - fci-go-up-arrow
 *   - fci-phone
 */


@if (get-const(config, load-icons) != false) {
  @font-face {
    font-family: "fc-icons";
    src: url(env-path-helper('#{get-const(config, font-path)}fc-icons.eot'));
    src: url(env-path-helper('#{get-const(config, font-path)}fc-icons.eot?#iefix')) format('eot'),
      url(env-path-helper('#{get-const(config, font-path)}fc-icons.woff')) format('woff'),
      url(env-path-helper('#{get-const(config, font-path)}fc-icons.ttf')) format('truetype'),
      url(env-path-helper('#{get-const(config, font-path)}fc-icons.svg#fc-icons')) format('svg');
    font-weight: normal;
    font-style: normal;
  }


  // We need the important rule so that we don't override the icon fonts
  // scss-lint:disable ImportantRule
  .fci-icon:before {
    font-family: "fc-icons" !important;
    font-style: normal !important;
    font-weight: normal !important;
    font-variant: normal !important;
    text-transform: none !important;
    speak: none;
    line-height: inherit;
    -webkit-font-smoothing: antialiased;
    -moz-osx-font-smoothing: grayscale;
  }
  // scss-lint:enable ImportantRule

  [class^="fci-"]:before,
  [class*=" fci-"]:before {
    @extend .fci-icon !optional;
  }

  .fci-go-to-arrow:before { content: "\"; }
  .fci-menu-icon:before { content: "\"; }
  .fci-tick:before { content: "\"; }
  .fci-user-circled:before { content: "\"; }
  .fci-phone-circled:before { content: "\"; }
  .fci-attention:before { content: "\"; }
  .fci-info-circled:before { content: "\"; }
  .fci-close:before { content: "\"; }
  .fci-transaction:before { content: "\"; }
  .fci-dollar-sign:before { content: "\"; }
  .fci-download-circled:before { content: "\"; }
  .fci-arrow-full-right:before { content: "\"; }
  .fci-search:before { content: "\"; }
  .fci-stats:before { content: "\"; }
  .fci-pound-sign:before { content: "\"; }
  .fci-user:before { content: "\"; }
  .fci-pencil:before { content: "\"; }
  .fci-go-up-arrow:before { content: "\"; }
  .fci-phone:before { content: "\"; }
  
}


/* ---------------------------------------------------------------------- *\
  SOURCE SANS
\* ---------------------------------------------------------------------- */

$source-sans: (
  ( folder: regular, file: Regular, weight: 400, style: normal, svgID: regular),
  ( folder: light, file: Light, weight: 300, style: normal, svgID: light),
  ( folder: light-italic, file: LightIt, weight: 300, style: italic, svgID: light_italic),
  ( folder: italic, file: It, weight: 400, style: italic, svgID: italic),
  ( folder: semi-bold, file: Semibold, weight: 600, style: normal, svgID: semibold),
  ( folder: semi-bold-italic, file: SemiboldIt, weight: 600, style: italic, svgID: SBdIt)
);

@if (get-const(config, load-fonts) != false) {
  @each $item in $source-sans {
    @font-face {
      font-family: get-const(config, font-family);
      font-weight: map-get($item, weight);
      font-style: map-get($item, style);

      src: url(env-path-helper('#{get-const(config, font-path)}fonts/#{map-get($item, folder)}/SourceSansPro-#{map-get($item, file)}.eot'));
      src: url(env-path-helper('#{get-const(config, font-path)}fonts/#{map-get($item, folder)}/SourceSansPro-#{map-get($item, file)}.eot?#iefix')) format('embedded-opentype'),
           url(env-path-helper('#{get-const(config, font-path)}fonts/#{map-get($item, folder)}/SourceSansPro-#{map-get($item, file)}.woff2')) format('woff2'),
           url(env-path-helper('#{get-const(config, font-path)}fonts/#{map-get($item, folder)}/SourceSansPro-#{map-get($item, file)}.woff')) format('woff'),
           url(env-path-helper('#{get-const(config, font-path)}fonts/#{map-get($item, folder)}/SourceSansPro-#{map-get($item, file)}.ttf')) format('truetype'),
           url(env-path-helper('#{get-const(config, font-path)}fonts/#{map-get($item, folder)}/SourceSansPro-#{map-get($item, file)}.svg#source_sans_pro#{map-get($item, svgID)}')) format('svg');
    }
  }
}
