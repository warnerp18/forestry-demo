import $ from 'jquery';
import utils from '../utils';

describe('Utils', () => {
  beforeEach(() => {
    jasmine.getFixtures().fixturesPath = 'base/src/current/styleguide/js/tests/fixtures';
  });

  describe('hasJS', () => {
    const EL = '.js-utils-hasjs';
    const HAS_JS_CLASS = 'has-js';

    beforeEach(() => {
      jasmine.getFixtures().load('utilsHasJS.html');


      utils.hasJS(HAS_JS_CLASS, EL);
    });

    it('adds the has-js class on all passed elements', () => {
      expect($(`${EL}.${HAS_JS_CLASS}`).length).toBe(5);
    });
  });

  describe('toggleClass', () => {
    const TOGGLE_CLASS = 'is-active';
    const EVENT = 'click';
    const CTA = '.js-cta';
    const TARGET = '.js-target';

    beforeEach(() => {
      jasmine.getFixtures().load('utilsToggleClass.html');

      utils.toggleClass(TOGGLE_CLASS, CTA, EVENT, TARGET);
    });

    describe('when event is triggered', () => {
      it('should add the is-active class if the elements do not have that class', () => {
        $(CTA).trigger(EVENT);

        expect($(`.js-toggle-class-wrapper .${TOGGLE_CLASS}`).length).toBe(4);
      });

      it('should remove the is-active class if the elements has that class', () => {
        $(`${CTA}, ${TARGET}`).addClass(TOGGLE_CLASS);
        $(CTA).trigger(EVENT);

        expect($(`.js-toggle-class-wrapper .${TOGGLE_CLASS}`).length).toBe(0);
      });
    });
  });
});
