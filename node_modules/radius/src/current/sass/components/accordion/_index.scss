/**
 * section: current/components/accordion
 * title: Accordion
 *
 * activateComponent: radius-component-accordion
 *
 *
 * description: |
 *   Accordion was intended to be used in the style of presenting information under titles in a dynamic and elegant way. Some examples of using the accordion would be in an FAQ section and a Q and A section.
 *
 *   ### Environment specific behaviour:
 *   When JavaScript is not available the hidden content in the accordion will become visible.
 *
 * markup: components/accordion/accordion
 */

$_accordion: (
  text-toggle-color: get-color(blue, base),
  border-color: get-color(grey-cool, light),
  icon-size: size(1.5),
  icon-bar-length: 10px,
  icon-bar-width: 2px,
  padding: size(1.5)
);


@function accordion($val) {
  @return map-get($_accordion, $val);
}


@mixin radius-component-accordion {
  .accordion__title {
    @include font(2x-large);

    margin-bottom: size(2.5);

    font-weight: get-const(config, font-weight-light);
  }


  .accordion-item {
    position: relative;

    border-bottom: 1px solid accordion(border-color);
  }


  .accordion-item.is-active {
    background-color: get-color(white);
  }


  .accordion-item:first-of-type {
    border-top: 1px solid accordion(border-color);
  }


  .accordion-item__title {
    @include font(large);

    padding: accordion(padding) (accordion(padding) * 2) accordion(padding) accordion(padding);
    margin-bottom: 0;

    font-weight: get-const(config, font-weight-regular);
    color: accordion(text-toggle-color);


    &:hover {
      cursor: pointer;
    }
  }


  .accordion-item__icon {
    position: absolute;
    top: size(1.5);
    right: size(1.5);

    width: accordion(icon-size);
    height: accordion(icon-size);

    color: accordion(text-toggle-color);

    border: 2px solid accordion(text-toggle-color);
    border-radius: 50%;


    &:before,
    &:after {
      position: absolute;
      top: 50%;
      left: 50%;

      background-color: accordion(text-toggle-color);
      border-radius: 1px;

      content: '';
    }


    &:before {
      width: accordion(icon-bar-length);
      height: accordion(icon-bar-width);
      margin-top: negative(accordion(icon-bar-width) / 2);
      margin-left: negative(accordion(icon-bar-length) / 2);
    }


    &:after {
      width: accordion(icon-bar-width);
      height: accordion(icon-bar-length);
      margin-top: negative(accordion(icon-bar-length) / 2);
      margin-left: negative(accordion(icon-bar-width) / 2);
    }
  }


  .accordion-item.is-active .accordion-item__icon:after {
    height: 0;
    margin-top: 0;
  }


  .accordion-item__content {
    @include font(medium);

    display: none;
    padding: 0 accordion(padding);
  }


  .accordion-item.is-active .accordion-item__content {
    display: block;
    padding: 0 accordion(padding) accordion(padding);
  }


  .accordion-support {
    margin-top: size(2);
  }


  .accordion-support__item {
    display: table;
  }


  .accordion-support__image,
  .accordion-support__copy {
    display: table-cell;

    vertical-align: middle;
  }


  .accordion-support__image {
    max-width: size(6);
  }


  .accordion-support__image--round {
    border-radius: 50%;
  }


  .accordion-support__copy {
    padding-right: size(1);
    padding-left: size(1);
  }


  .accordion-support__link {
    @include font(large);

    display: block;

    font-weight: get-const(config, font-weight-bold);
  }


  .accordion-support--guide {
    padding-bottom: size(2);
    margin-bottom: size(2);

    border-bottom: 1px solid accordion(border-color);
  }
}
