/**
 * section: current/components/buttons
 * title: Buttons
 *
 * activateComponent: radius-component-buttons
 *
 * description: |
 *   To create a button, simply add the <code>.btn</code> class to a <code>button</code>, <code>a</code>, or <code>input</code> element.<br>
 *   Each button should have the <code>.btn</code> class to start with, followed by the available button classes to create the desired button styling (e.g. size, importance).
 *
 * usage:
 *   btn: Basic usage
 *
 * layout: components/buttons/buttons
 */


/**
 * section: current/components/buttons/sizes
 * title: Sizes
 *
 * description: |
 *   By default the buttons have a predefined size. If you want to create a different sized button, you can use one of the classes listed below:
 *
 * sizes:
 *   btn--small: Small button
 *   btn--large: Large button
 *
 * layout: components/buttons/buttons
 */

/**
 * section: current/components/buttons/importance
 * title: Importance
 *
 * description: |
 *   Certain buttons could be more important than others. There should be a clear separation in terms of the visual order of importance of the buttons on a page.
 *
 * importance:
 *   btn--primary: Primary button. The most visible button when it comes to importance.
 *   btn--secondary: This should be used in conjunction with a primary button. It means that the button is still visible to users, but less important than the primary button.
 *   btn--secondary-alt: Same meaning as .btn-secondary. This should be used on dark backgrounds.
 *   btn--link: Least important type of button. Should be used in cases where the users are not encouraged to click it (e.g. "Erase your data"). Visually, it is similar to a regular link but it can inherit all other properties of a button (size, icons, disabled, etc.).
 *
 * layout: components/buttons/buttons
 */

/**
 * section: current/components/buttons/variations
 * title: Variations
 *
 * description: |
 *   Button variation go here.
 *
 * variations:
 *   btn--full: This makes the button fill 100% of the available width.
 *   btn--no-margin: By default buttons have a margin bottom set to them. This cancels that margin.
 *   is-loading: This is a state class that can be applied while an action is performed in the background (e.g. SPAs - saving / importing data).
 *   fci-[icon]: This adds an icon to the left of the button. [icon] is a placeholder for the icon name. A list of all the available icons can be found on the Variables page.
 *   btn--disabled: For disabled buttons, apply this class or simply add the `disabled` attribute.
 *
 * layout: components/buttons/buttons
 */


@import 'animations/loop-rotate';


$btn-primary: (
  bg-inactive: get-color(blue),
  bg-hover: get-color(blue, light),
  bg-active: get-color(blue, dark),
  bg-disabled: get-color(grey-cool, light),
  color-inactive: get-color(white)
);

$btn-secondary: (
  bg-inactive: transparent,
  bg-hover: rgba(get-color(white), .6),
  bg-active: rgba(get-color(blue, light), .1),
  bg-disabled: rgba(get-color(white), .6),

  color-inactive: get-color(blue),
  color-disabled: get-color(grey-cool),

  border-color-inactive: get-color(grey-warm, darker),
  border-color-hover: get-color(blue),
  border-color-active: get-color(blue),
  border-color-disabled: get-color(grey-cool)
);

$btn-secondary-alt: (
  bg-inactive: transparent,
  bg-hover: rgba(get-color(black), .3),
  bg-active: rgba(get-color(black), .2),
  bg-disabled: rgba(get-color(black), .2),

  color-inactive: get-color(white),
  color-disabled: rgba(get-color(white), .2),

  border-color-inactive: get-color(white),
  border-color-active: rgba(get-color(white), .5),
);

$btn-link: (
  color-inactive: get-color(blue),
);

$btn-is-loading: (
  spinner-thickness: 2px,
  spinner-color: get-color(white)
);


// basic button structure
%btn {
  @include font(medium, false);

  display: inline-block;
  padding: size(0 1);
  margin-bottom: size(1);

  line-height: size(3);
  white-space: nowrap;

  border: 0;
  border-radius: size(.3);


  &:hover {
    text-decoration: none;
  }
}


// default button
@mixin radius-component-buttons {
  @include radius-subcomponent-buttons-loop-rotate;

  .btn {
    @extend %btn;
  }


  // sizes - large
  .btn--large {
    @extend %btn;
    @include font(large);

    padding-top: size(.875);
    padding-bottom: size(.875);
  }


  // sizes - small
  .btn--small {
    @extend %btn;
    @include font(small);

    padding-top: size(.625);
    padding-bottom: size(.625);
  }


  // importance - primary
  .btn--primary {
    @extend %btn;

    color: map-get($btn-primary, color-inactive);

    background: map-get($btn-primary, bg-inactive);


    &:hover,
    &:focus {
      background: map-get($btn-primary, bg-hover);
    }


    &:active {
      background: map-get($btn-primary, bg-active);
    }
  }


  .btn--primary.btn--disabled,
  .btn--primary[disabled] {
    background: map-get($btn-primary, bg-disabled);
  }


  // importance - secondary
  .btn--secondary {
    @extend %btn;

    color: map-get($btn-secondary, color-inactive);

    background: map-get($btn-secondary, bg-inactive);
    border: 1px solid map-get($btn-secondary, border-color-inactive);


    &:hover,
    &:focus {
      background: map-get($btn-secondary, bg-hover);
      border-color: map-get($btn-secondary, border-color-hover);
    }


    &:active {
      background: map-get($btn-secondary, bg-active);
      border-color: map-get($btn-secondary, border-color-active);
    }
  }


  .btn--secondary.btn--disabled,
  .btn--secondary[disabled] {
    color: map-get($btn-secondary, color-disabled);

    background: map-get($btn-secondary, bg-disabled);
    border-color: map-get($btn-secondary, border-color-disabled);
  }


  // importance - secondary alternative
  .btn--secondary-alt {
    @extend %btn;

    color: map-get($btn-secondary-alt, color-inactive);

    background: map-get($btn-secondary-alt, bg-inactive);
    border: 1px solid map-get($btn-secondary-alt, border-color-inactive);


    &:hover,
    &:focus {
      background: map-get($btn-secondary-alt, bg-hover);
    }


    &:active {
      background: map-get($btn-secondary-alt, bg-active);
      border-color: map-get($btn-secondary-alt, border-color-active);
    }
  }


  .btn--secondary-alt.btn--disabled,
  .btn--secondary-alt[disabled] {
    color: map-get($btn-secondary-alt, color-disabled);

    background: map-get($btn-secondary-alt, bg-disabled);
    border: 0;
  }


  // importance - link
  .btn--link {
    padding: 0;

    font: inherit;
    color: map-get($btn-link, color-inactive);

    background: none;
    border: 0;


    &:hover,
    &:focus,
    &:active {
      text-decoration: underline;

      background: none;
    }
  }


  // special cases - with icon
  .btn[class*="fci-"] {
    &:before {
      float: left;
      margin-right: size(.75);

      font-size: inherit;
      line-height: inherit;
    }
  }


  // special cases - loading button
  .btn.is-loading:after {
    @include animation(loop-rotate 1.4s infinite linear);

    display: inline-block;
    width: size(1);
    height: size(1);
    margin-left: size(1);

    vertical-align: middle;
    border: map-get($btn-is-loading, spinner-thickness) solid map-get($btn-is-loading, spinner-color);
    border-bottom-color: transparent;
    border-radius: 50%;

    content: '';
    transform: translateZ(0);
  }


  .btn--secondary.is-loading:after {
    border-color: map-get($btn-secondary, border-color-disabled);
    border-bottom-color: transparent;
  }


  // special cases - full width
  .btn--full {
    @extend %btn;

    display: block;
    width: 100%;

    text-align: center;
  }


  // special cases - no bottom margin
  .btn--no-margin {
    margin-bottom: 0;
  }
}
