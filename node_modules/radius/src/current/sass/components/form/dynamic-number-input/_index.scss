/**
 * section: current/components/form/dynamic-number-input
 * title: Dynamic Number Input Field
 *
 * activateComponent: radius-component-dynamic-number-input
 *
 * description: |
 *   Resizes with input length and allows for min as well as max value settings.
 *   An error message will appear if the criteria are not met.
 *   Only whole numbers are supported.
 *
 * markup: components/form/dynamic-number-input/dynamic-number-input
 */


$_dynamic-number-input: (
  symbol-dimension: 26px,
  symbol-arrow: '\2794',
  error-overflow: 40%,
  notification-triangle-size: 24px,
  input-line-height: 40px
);


@mixin radius-component-dynamic-number-input {
  .dynamic-number-input {
    @include font(2x-large);

    position: relative;

    display: inline-block;
    margin-bottom: size(1);

    border-bottom: 1px dotted rgba(get-color(black), 0.4);
  }


  .dynamic-number-input::before {
    position: absolute;

    line-height: get-var($_dynamic-number-input, input-line-height);

    content: attr(data-currency);
  }


  .dynamic-number-input__focusable {
    cursor: text;
  }


  .dynamic-number-input__focusable:after {
    @extend .fci-pencil:before !optional;
    @extend .fci-icon:before !optional;

    @include font(medium);

    position: absolute;
    top: 0;
    right: size(0.5);
    bottom: 0;

    display: inline-block;
    width: get-var($_dynamic-number-input, symbol-dimension);
    height: get-var($_dynamic-number-input, symbol-dimension);
    margin: auto;

    color: get-color(white);
    text-align: center;

    pointer-events: none;
    background-color: get-color(blue, dark);
    border: 1px solid get-color(blue, dark);
    border-radius: 25%;
  }


  .dynamic-number-input__submit {
    @include font(medium);

    position: absolute;
    top: 0;
    right: size(0.5);
    bottom: 0;
    z-index: 1;

    width: get-var($_dynamic-number-input, symbol-dimension);
    height: get-var($_dynamic-number-input, symbol-dimension);
    padding: 0;
    margin-top: auto;
    margin-bottom: auto;

    color: get-color(blue, dark);

    background: get-color(white);
    border: 1px solid get-color(blue, dark);
    border-radius: 25%;


    .is-clean & {
      display: none;
    }
  }


  .dynamic-number-input__submit:after {
    content: get-var($_dynamic-number-input, symbol-arrow);
  }


  .dynamic-number-input__input-field {
    z-index: 1;

    padding-top: 0;
    padding-right: size(2.25);
    padding-bottom: 0;
    padding-left: 0.5em;

    font: inherit;
    line-height: get-var($_dynamic-number-input, input-line-height);
    color: inherit;

    background: transparent;
    border: 0;
  }


  .dynamic-number-input__error {
    @include font(medium);

    position: absolute;
    bottom: 120%;
    left: 50%;

    display: none;
    width: size(15);
    padding: size(1);

    text-align: center;

    background: get-color(white);

    transform: translateX(-50%); //centering using translate to ensure error is centered regardless of the width of the parent
    box-shadow: 0 0 2px rgba(get-color(black), 0.3);


    .is-error & {
      display: block;
    }
  }


  .dynamic-number-input__error:after {
    position: absolute;
    bottom: 0;
    left: 50%;

    display: block;
    width: get-var($_dynamic-number-input, notification-triangle-size);
    height: get-var($_dynamic-number-input, notification-triangle-size);
    margin-bottom: negative(get-var($_dynamic-number-input, notification-triangle-size) / 2);
    margin-left: negative(get-var($_dynamic-number-input, notification-triangle-size) / 2);

    background: get-color(white);

    content: '';
    transform: rotate(45deg);
    box-shadow: 1px 1px 1px -1px rgba(get-color(black), 0.3);
  }
}
