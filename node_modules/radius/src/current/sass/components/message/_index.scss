/**
 * section: current/components/message
 * title: Message
 *
 * activateComponent: radius-component-message
 *
 * description: |
 *   Message box for various type of messages.
 *
 *   The component requires the `.message` class for the default info message. For other types of messages (error, warnings, success) you can add one of the classes listed below.
 *
 * modifiers:
 *   message--info: info messages
 *   message--error: error messages
 *   message--warning: warning message
 *   message--success: success message
 *
 * markup: components/message/message
 */


$_message: (
  break-point: mobile-large,
  color: get-color(magenta, light),
  color-error: get-color(red),
  color-success: get-color(green),
  color-warning: get-color(yellow),
  icon-padding: size(5)
);


@import 'mixins/index';


@mixin radius-component-message {
  .message {
    position: relative;

    padding: size(.5 1);
    margin-bottom: size(2);

    background: get-color(white);
    box-shadow: 0 1px 1px 0 rgba(get-color(black), .1);

    @include breakpoint(to get-var($_message, break-point)) {
      text-align: center;

      border-bottom: 4px solid get-var($_message, color);


      &:before {
        margin: size(0 auto 1);
      }
    }


    @include breakpoint(from get-var($_message, break-point)) {
      border-left: 4px solid get-var($_message, color);


      &:before {
        position: absolute;
        top: 0;
        bottom: 0;
        left: size(1);

        margin: auto 0;
      }
    }


    &:before {
      @extend .fci-icon !optional;

      display: block;
      height: size(2.5);

      font-size: size(2.5);
      line-height: size(2.5);
      color: get-var($_message, color);
    }
  }


  .message__title {
    @include font(x-large);

    display: block;
    padding: 0;
    margin-bottom: size(.5);

    font-weight: get-const(config, font-weight-light);
  }


  .message--info {
    @include message-padding-left;


    &:before {
      @extend .fci-info-circled !optional;
    }
  }


  .message--error {
    @include message-padding-left;


    @include breakpoint(to get-var($_message, break-point)) {
      border-bottom-color: get-var($_message, color-error);
    }


    @include breakpoint(from get-var($_message, break-point)) {
      border-left: 4px solid get-var($_message, color-error);
    }


    &:before {
      @extend .fci-attention !optional;

      color: get-var($_message, color-error);
    }
  }


  .message--warning {
    @include message-padding-left;

    @include breakpoint(to get-var($_message, break-point)) {
      border-bottom-color: get-var($_message, color-warning);
    }


    @include breakpoint(from get-var($_message, break-point)) {
      border-left: 4px solid get-var($_message, color-warning);
    }


    &:before {
      @extend .fci-attention !optional;

      color: get-var($_message, color-warning);
    }
  }


  .message--success {
    @include message-padding-left;


    @include breakpoint(to get-var($_message, break-point)) {
      border-bottom-color: get-var($_message, color-success);
    }


    @include breakpoint(from get-var($_message, break-point)) {
      border-left: 4px solid get-var($_message, color-success);
    }


    &:before {
      @extend .fci-tick !optional;

      color: get-var($_message, color-success);
    }
  }
}
