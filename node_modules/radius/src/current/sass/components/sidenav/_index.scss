/**
 * section: current/components/sidenav
 * title: Sidenav
 *
 * activateComponent: radius-component-sidenav
 *
 * description: |
 *   Has class `side-nav--no-sticky` which can be used to remove the default `position: fixed`.
 *   Mobile version is hidden with JS disabled as funcitonality is useless
 *   First link should always have `is-active` class by default
 *
 * markup: components/sidenav/sidenav
 */


$_sidenav: (
  bp-small: mobile-large,
  bp-medium: desktop-large,
  border-radius: 5px,
  bullet-size: size(.5),
  color-border: get-color(grey-cool, light),
  color-default-nav-item-bg: get-color(white),
  color-default-text: get-color(blue),
  color-active-bg: get-color(magenta, light),
  color-hover-bg: get-color(blue),
  color-hover-text: get-color(white),
  color-triangle: get-color(grey-cool, dark)
);


@import 'mixins/index';


@mixin radius-component-sidenav {
  .no-js .side-nav {
    @include breakpoint(to get-var($_sidenav, bp-small)) {
      display: none;
    }
  }


  .side-nav {
    position: fixed;
    bottom: 0;
    z-index: 100;

    width: 100%;
    height: size(3);

    overflow: hidden;
    background-color: get-var($_sidenav, color-default-nav-item-bg);
    transition: height .1s linear;


    @include breakpoint(from get-var($_sidenav, bp-small)) {
      position: absolute;
      bottom: auto;

      width: auto;
      height: auto;

      background-color: transparent;
      border: 0;
    }


    @include breakpoint(from get-var($_sidenav, bp-medium)) {
      overflow: visible;
    }


    &.is-sticky {
      position: absolute;


      @include breakpoint(from get-var($_sidenav, bp-small)) {
        position: fixed;
      }
    }


    &.is-active {
      @include breakpoint(to get-var($_sidenav, bp-small)) {
        height: 100%;

        background-color: get-color(white);


        &:before {
          @include font(x-large);

          position: absolute;
          top: size(2.5);

          width: 100%;

          text-align: center;
          content: attr(data-mobile-heading);
        }
      }
    }
  }


  .side-nav__navigation {
    @include breakpoint(to get-var($_sidenav, bp-small)) {
      @include prefix(transform, translateX(-50%) translateY(-50%), webkit ms);

      position: absolute;
      top: 50%;
      left: 50%;

      text-align: center;
    }
  }


  .side-nav__item {
    @include font(x-large);

    position: relative;

    float: left;
    width: 100%;
    padding: size(1);
    clear: left;

    color: get-var($_sidenav, color-default-text);
    text-decoration: none;
    white-space: nowrap;

    background-color: get-var($_sidenav, color-default-nav-item-bg);


    @include breakpoint(from get-var($_sidenav, bp-small)) {
      @include font(medium);

      width: auto;
      min-width: size(2);
      padding: size(.5) size(.5) size(.5) size(1.5);
      margin-bottom: size(.5);

      text-indent: -500px;

      background-color: transparent;
    }


    @include breakpoint(from get-var($_sidenav, bp-medium)) {
      @include side-nav-item-base;

      width: auto;

      text-indent: 0;

      background-color: get-var($_sidenav, color-default-nav-item-bg);
    }


    &:before {
      @include breakpoint(from get-var($_sidenav, bp-small)) {
        position: absolute;
        top: 50%;
        left: size(.5);

        width: get-var($_sidenav, bullet-size);
        height: get-var($_sidenav, bullet-size);
        margin-top: negative(get-var($_sidenav, bullet-size) / 2);

        border: 2px solid;
        border-radius: 50%;

        content: '';
      }
    }


    &:hover,
    &:active {
      text-decoration: none;


      @include breakpoint(from get-var($_sidenav, bp-small)) {
        @include side-nav-item-base;
        @include side-nav-item-hover-colors;

        font-weight: get-const(config, font-weight-regular);
        text-indent: 0;


        // bullet
        &:before {
          background-color: get-var($_sidenav, color-hover-text);
        }
      }
    }


    &.is-active {
      @include breakpoint(from get-var($_sidenav, bp-small)) {
        @include side-nav-item-base;
        @include side-nav-item-active-colors;

        font-weight: get-const(config, font-weight-regular);
        text-indent: 0;


        // bullet
        &:before {
          background-color: get-var($_sidenav, color-hover-text);
        }
      }
    }
  }


  .side-nav:hover .side-nav__item,
  .side-nav:active .side-nav__item {
    @include breakpoint(from get-var($_sidenav, bp-small) to get-var($_sidenav, bp-medium)) {
      @include side-nav-item-base;

      text-indent: 0;
      background-color: get-var($_sidenav, color-default-nav-item-bg);


      &:hover,
      &:active {
        @include side-nav-item-hover-colors;
      }


      &.is-active {
        @include side-nav-item-active-colors;
      }
    };
  }


  // close button mobile
  .side-nav__toggle {
    @include font(large);

    position: absolute;
    bottom: 0;
    left: 0;
    z-index: 100;

    display: none;
    width: 100%;
    height: size(3);
    padding: size(.5) size(1);

    border: 1px solid get-var($_sidenav, color-border);


    @include breakpoint(to get-var($_sidenav, bp-small)) {
      display: block;
    }


    &:focus {
      outline: none;
    }
  }


  .side-nav.is-active .side-nav__toggle {
    border-top: 0;
  }



  .side-nav__triangle {
    margin-left: size(.5);


    // down arrow [mobile view only]
    &:after {
      @include triangle(up, get-var($_sidenav, color-triangle), 10px);

      display: inline-block;

      content: '';
    }
  }


  .side-nav.is-active .side-nav__triangle,
  .side-nav.is-active .side-nav__label,
  .side-nav__close {
    display: none;
  }


  .side-nav.is-active .side-nav__close {
    display: initial;
  }
}
