const TABLET_LARGE = 980;

export default {
  addEventListener: (element, eventName, callback, isCapturing) => {
    if (!element || !element.addEventListener) {
      return;
    }
    element.addEventListener(eventName, callback, isCapturing);
  },
  addClass: (element, className) => {
    if (!element) {
      return;
    }

    if (element.classList) {
      element.classList.add(className);
    } else {
      // Do not add duplicate class names
      if (element.className.indexOf(className) === -1) {
        element.className += ` ${className}`;
      }
    }
  },
  removeClass: (el, ...classNames) => {
    const element = el;
    const classArr = element.className.split(' ');

    element.className = without(classArr, ...classNames).join(' ');
  },
  hasClass: (el, className) => {
    const element = el;
    const classArr = element.className.split(' ');

    if (element.classList) {
      return element.classList.contains(className);
    }

    if (classArr.indexOf(className) === -1) {
      return false;
    }
    return true;
  },
  textContent: (el, text) => {
    const element = el;
    if ('textContent' in document.body) {
      element.textContent = text;
    } else {
      element.innerText = text;
    }
  },
  hasAttribute: (el, attribute) => {
    if (!el.hasAttribute) {
      return false;
    }

    return el.hasAttribute(attribute);
  },
  toggleClass: (element, className, force) => {
    if (element.classList) {
      element.classList.toggle(className, force);
    } else if (this.hasClass(element, className)) {
      this.removeClass(element, className);
    } else {
      this.addClass(element, className);
    }
  },
  hasCoarsePointer: () => {
    if (window.matchMedia) {
      return window.matchMedia('(pointer: coarse)').matches;
    }

    return window.screen.width < TABLET_LARGE;
  },
  forEach: (collection, callback) => {
    Array
      .from(collection)
      .forEach(callback);
  },
};

function without(source, ...toRemove) {
  return source.filter(element => !toRemove.includes(element));
}
