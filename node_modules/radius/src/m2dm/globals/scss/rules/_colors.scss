/**
 * section: M2DM/rules/colors
 * title: Colors
 *
 * layout: globals/scss/rules/colors
 *
 * purpose: Use to ensure brand consistency.
 *
 * description: |
 *   A palette of functional colors used to convey a message or highlight actions. Basic color names are used as key names (purple, green, blue, etc.) with various lighter shades as array elements. Above the base colour there will be a contrast colour which will be usually used as background for elements containing white text. Below the base colour there is a scale of lighter shades which is using a naming convension based on t-shirt sizing, starting from `light` and scaling down different levels of lightness depending on the base colour. Options for the lighter shades are: `light`, `x-light`, `2x-light`, `3x-light`, `4x-light` etc.<br>
 *
 * colors:
 *   - white:
 *     - colors__sample--white: get-color(white)
 *   - black:
 *     - colors__sample--black: get-color(black)
 *   - purple:
 *     - colors__sample--purple-contrast: get-color(purple, contrast)
 *     - colors__sample--purple-base: get-color(purple, base)
 *     - colors__sample--purple-light: get-color(purple, light)
 *     - colors__sample--purple-x-light: get-color(purple, x-light)
 *     - colors__sample--purple-2x-light: get-color(purple, 2x-light)
 *     - colors__sample--purple-3x-light: get-color(purple, 3x-light)
 *   - orange:
 *     - colors__sample--orange-contrast: get-color(orange, contrast)
 *     - colors__sample--orange-base: get-color(orange, base)
 *     - colors__sample--orange-light: get-color(orange, light)
 *     - colors__sample--orange-x-light: get-color(orange, x-light)
 *     - colors__sample--orange-2x-light: get-color(orange, 2x-light)
 *     - colors__sample--orange-3x-light: get-color(orange, 3x-light)
 *   - green:
 *     - colors__sample--green-contrast: get-color(green, contrast)
 *     - colors__sample--green-base: get-color(green, base)
 *     - colors__sample--green-light: get-color(green, light)
 *     - colors__sample--green-x-light: get-color(green, x-light)
 *     - colors__sample--green-2x-light: get-color(green, 2x-light)
 *     - colors__sample--green-3x-light: get-color(green, 3x-light)
 *   - red:
 *     - colors__sample--red-contrast: get-color(red, contrast)
 *     - colors__sample--red-base: get-color(red, base)
 *     - colors__sample--red-light: get-color(red, light)
 *     - colors__sample--red-x-light: get-color(red, x-light)
 *     - colors__sample--red-2x-light: get-color(red, 2x-light)
 *     - colors__sample--red-3x-light: get-color(red, 3x-light)
 *   - yellow:
 *     - colors__sample--yellow-contrast: get-color(yellow, contrast)
 *     - colors__sample--yellow-base: get-color(yellow, base)
 *     - colors__sample--yellow-light: get-color(yellow, light)
 *     - colors__sample--yellow-x-light: get-color(yellow, x-light)
 *     - colors__sample--yellow-2x-light: get-color(yellow, 2x-light)
 *     - colors__sample--yellow-3x-light: get-color(yellow, 3x-light)
 *   - blue:
 *     - colors__sample--blue-contrast: get-color(blue, contrast)
 *     - colors__sample--blue-base: get-color(blue, base)
 *     - colors__sample--blue-light: get-color(blue, light)
 *     - colors__sample--blue-x-light: get-color(blue, x-light)
 *     - colors__sample--blue-2x-light: get-color(blue, 2x-light)
 *     - colors__sample--blue-3x-light: get-color(blue, 3x-light)
 *   - grey:
 *     - colors__sample--grey-contrast: get-color(grey, contrast)
 *     - colors__sample--grey-base: get-color(grey, base)
 *     - colors__sample--grey-light: get-color(grey, light)
 *     - colors__sample--grey-x-light: get-color(grey, x-light)
 *     - colors__sample--grey-2x-light: get-color(grey, 2x-light)
 *     - colors__sample--grey-3x-light: get-color(grey, 3x-light)
 *     - colors__sample--grey-4x-light: get-color(grey, 4x-light)
 *
 * sassUsage: |
 *   get-color(purple)
 *   // if the base shade is requested the 2nd parameter should not be defined, as it is set to `base` by default
 *   get-color(purple, light)
 *   // the 2nd parameter defines the shade of the color - it is an optional parameter (please see above)
 */

$colors: (

  white: rgb(255, 255, 255),

  black: rgb(0, 0, 0),

  purple: (
    contrast: rgb(117, 34, 125),
    base: rgb(143, 68, 138),
    light: rgb(169, 91, 166),
    x-light: rgb(214, 166, 219),
    2x-light: rgb(232, 201, 235),
    3x-light: rgb(249, 241, 250)
  ),

  orange: (
    contrast: rgb(252, 78, 30),
    base: rgb(255, 107, 0),
    light: rgb(254, 162, 116),
    x-light: rgb(255, 210, 188),
    2x-light: rgb(255, 242, 236),
    3x-light: rgb(255, 250, 248)
  ),

  green: (
    contrast: rgb(15, 136, 77),
    base: rgb(52, 181, 118),
    light: rgb(112, 216, 166),
    x-light: rgb(181, 237, 210),
    2x-light: rgb(234, 255, 245),
    3x-light: rgb(249, 255, 252)
  ),

  red: (
    contrast: rgb(206, 16, 37),
    base: rgb(232, 32, 55),
    light: rgb(255, 133, 146),
    x-light: rgb(255, 194, 201),
    2x-light: rgb(255, 242, 244),
    3x-light: rgb(255, 250, 251)
  ),

  yellow: (
    contrast: rgb(255, 205, 0),
    base: rgb(253, 225, 50),
    light: rgb(251, 243, 141),
    x-light: rgb(255, 251, 194),
    2x-light: rgb(255, 254, 240),
    3x-light: rgb(255, 255, 250)
  ),

  blue: (
    contrast: rgb(2, 141, 208),
    base: rgb(0, 155, 222),
    light: rgb(111, 197, 238),
    x-light: rgb(188, 229, 248),
    2x-light: rgb(238, 249, 255),
    3x-light: rgb(249, 253, 255)
  ),

  grey: (
    contrast: rgb(38, 40, 56),
    base: rgb(66, 69, 84),
    light: rgb(115, 116, 128),
    x-light: rgb(147, 150, 167),
    2x-light: rgb(201, 203, 217),
    3x-light: rgb(239, 240, 245),
    4x-light: rgb(247, 248, 254)
  ),
);
