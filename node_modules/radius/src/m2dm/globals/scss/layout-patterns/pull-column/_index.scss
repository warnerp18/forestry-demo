/**
 * section: M2DM/layout-patterns/pull-column
 * title: Pull column
 *
 * activateComponent: radius-component-pull-column
 *
 * purpose: Use to create a balanced and clearer layout for pairing types of content that have different visual weights.
 *
 * description: |
 *   This layout pattern is for the cases when we have two equal columns that behave differently:
 *   * One of them follows the page grid
 *   * The content within the other column will fill all of the available space, sitting outside the page grid and "pulling" the content within this column to the left or right edge of the viewport<br><br>
 *
 *   The component requires a `pull-column--left` or `pull-column--right` modifier, depending on which one is the one that pulls the content. The order of `pull-column__content` and `pull-column__pulled` depends on which modifier is applied.
 *
 *   This is not applied on small screens where the content goes back to stacked rows.
 *
 *
 *   ## variations:
 *     - `pull-column--reorder-items`: re-order items on a mobile device
 *     - `pull-column--pulled-background`: pulls background but does not remove gutters
 *
 * markup: globals/scss/layout-patterns/pull-column/pull-column
 */


@mixin radius-component-pull-column {
  $breakpoint-small: tablet-small;
  $breakpoint-large: desktop-x-large;
  $gutter: nth(get-columns-widths(1 7 1), 1) * 1vw;
  $gutter-large: nth(get-columns-widths(1 5 1), 1) * 1vw;
  $inner-gutter: 1.5rem;


  .pull-column {
    @include from($breakpoint-small) {
      @include columns-no-padding(1 1);
    }
  }


  .pull-column__content {
    padding-right: $gutter;
    padding-left: $gutter;
  }


  .pull-column__content,
  .pull-column__pulled {
    display: flex;
    flex-direction: column;
    justify-content: center;

    vertical-align: middle;
  }


  @include to($breakpoint-small) {
    .pull-column--left .pull-column__content,
    .pull-column--right .pull-column__pulled {
      padding-bottom: 2.5rem;
    }


    .pull-column--pulled-background .pull-column__pulled {
      padding-right: $gutter;
      padding-left: $gutter;
    }
  }


  @include from($breakpoint-small) {
    .pull-column--left .pull-column__content {
      padding-right: $inner-gutter;
      padding-left: $gutter;
      padding-left: calc(#{$gutter} + #{$inner-gutter});
    }


    .pull-column--left .pull-column__pulled {
      padding-left: $inner-gutter;
    }


    .pull-column--pulled-background.pull-column--left .pull-column__pulled {
      padding-right: $gutter;
    }


    .pull-column--right .pull-column__content {
      padding-right: $gutter;
      padding-right: calc(#{$gutter} + #{$inner-gutter});
      padding-left: $inner-gutter;
    }


    .pull-column--right .pull-column__pulled {
      padding-right: $inner-gutter;
    }


    .pull-column--pulled-background.pull-column--right .pull-column__content {
      padding-left: $gutter;
    }
  }


  @include from($breakpoint-large) {
    .pull-column--left .pull-column__content {
      padding-left: $gutter-large;
      padding-left: calc(#{$gutter-large} + #{$inner-gutter});
    }


    .pull-column--pulled-background.pull-column--left .pull-column__pulled {
      padding-right: $gutter-large;
    }


    .pull-column--right .pull-column__content {
      padding-right: $gutter-large;
      padding-right: calc(#{$gutter-large} + #{$inner-gutter});
    }


    .pull-column--pulled-background.pull-column--right .pull-column__content {
      padding-left: $gutter-large;
    }
  }


  .pull-column--reorder-items {

    @include to ($breakpoint-small) {

      display: flex;
      flex-direction: column-reverse;

      &.pull-column--left .pull-column__content,
      &.pull-column--right .pull-column__pulled {
        padding-bottom: 1rem;
      }

      &.pull-column--right .pull-column__content,
      &.pull-column--left .pull-column__pulled {
        padding-bottom: 2.5rem;
      }
    }
  }
}
