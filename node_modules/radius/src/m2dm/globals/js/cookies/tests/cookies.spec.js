import cookies from '../index';

describe('Cookies', () => {
  const cookie = {
    cookieName: 'FCCookie',
    cookieValue: 'test',
    cookieDays: 365,
    cookiePath: '/',
  };
  const cookie2 = {
    cookieName: 'AltCookie',
    cookieValue: 'crazyvalue',
    cookieDays: 365,
    cookiePath: '/',
  };

  beforeEach(() => {
    cookies.setCookie(cookie);
    cookies.setCookie(cookie2);
  });

  afterEach(() => {
    cookies.setCookie(Object.assign({}, cookie, { cookieDays: -365 }));
    cookies.setCookie(Object.assign({}, cookie2, { cookieDays: -365 }));
  });
  
  describe('Creates a cookie', () => {
    it('with the right name', () => {
      expect(document.cookie).toContain(cookie.cookieName);
    });

    it('with the right value', () => {
      expect(document.cookie).toContain(cookie.cookieValue);
    });

    it('creates a second cookie with the right name', () => {
      expect(document.cookie).toContain(cookie2.cookieValue);
    });

    it('creates a second cookie with the right value', () => {
      expect(document.cookie).toContain(cookie2.cookieValue);
    });
  });

  describe('Retrieves cookie', () => {
    it('by a name', () => {
      expect(cookies.getCookie(cookie.cookieName)).toEqual(cookie.cookieValue);
    });

    it('also gets the second in the list of set cookies', () => {
      expect(cookies.getCookie(cookie2.cookieName)).toEqual(cookie2.cookieValue);
    });
  });

  describe('Delete cookie', () => {
    const cookieToDelete = {
      cookieName: cookie.cookieName,
      cookieValue: cookie.cookieValue,
      cookieDays: -365,
      cookiePath: cookie.cookiePath,
    };

    beforeEach(() => {
      cookies.setCookie(cookieToDelete);
    });

    it('should be empty', () => {
      expect(document.cookie).not.toContain(cookie.cookieName);
      expect(document.cookie).not.toContain(cookie.cookieValue);   
    });  
  });
});
