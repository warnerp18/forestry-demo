import navigation from '../components/navigation';

const changePath = (path) => {
  spyOn(window, 'getURL').and.returnValue(new URL(`http://example.com${path}`));
};

describe('navigation', () => {
  const containsActive = link => link.classList.contains('is-active');
  let links;

  beforeEach(() => {
    const fixture = `
      <div id="links" data-js-navigation>
        <a href="/page-1">Page 1</a>
        <a href="/page-1">Page 1 from a different link</a>
        <a href="/prefix/page-1">Page 2</a>
        <a href="/page-1/suffix">Page 3</a>
      </div>
    `;

    document.body.innerHTML = fixture;

    links = [...document.querySelectorAll('#links a')];
  });

  describe('when a page is visited', () => {
    beforeEach(() => {
      changePath('/page-1');

      navigation();
    });

    it('should add the is-active class only to the exact matched pages', () => {
      expect(containsActive(links[0])).toBe(true);
      expect(containsActive(links[1])).toBe(true);
      expect(containsActive(links[2])).toBe(false);
      expect(containsActive(links[3])).toBe(false);
    });
  });

  describe('when a page is visited and the url has a trailing slash', () => {
    beforeEach(() => {
      changePath('/page-1/');

      navigation();
    });

    it('should strip the slash and still match exactly', () => {
      expect(containsActive(links[0])).toBe(true);
    });
  });
});
