$_sidebar: (
  width: styleguide(sidebar-width),
  breakpoint: styleguide(page-breakpoint),
  toggle-size: 3rem,
  border-color: get-color(grey, 2x-light),
  level-2-item-color: get-color(grey, light),
  emphasize-color: get-color(grey, contrast),
  item-state-bar-color: get-color(orange),
  black80: transparentize(rgb(0, 0, 0), 0.8)
);

@function sidebar($var) {
  @return map-get($_sidebar, $var);
}


.sidebar {
  z-index: 2;

  padding: 1rem;

  overflow: auto;

  background: get-color(white);

  border-right: 1px solid map-get($_sidebar, border-color);

  @include to(sidebar(breakpoint)) {
    position: fixed;
    bottom: 0;

    width: 100%;
  }

  @include from(sidebar(breakpoint)) {
    flex: 1;

    height: 100%;
  }
}

.sidebar__toggle-button {
  z-index: 10;

  display: none;
  width: 100%;
  padding: 0.5rem 1rem;
  margin: 0;

  color: map-get($_sidebar, white);
  text-align: left;

  background: get-color(purple);
  border-top-width: 2px; // stylelint-disable-line declaration-property-unit-whitelist
  border-radius: 0;

  transition: all 200ms ease;
  transition-property: color, background;

  &:hover,
  &:focus {
    color: map-get($_sidebar, white);
    text-decoration: none;

    background: get-color(purple, contrast);
  }
}


.sidebar__breadcrumb {
  @include from(sidebar(breakpoint)) {
    display: none;
  }
}


.sidebar__nav {
  @include to(sidebar(breakpoint)) {
    display: none;
  }
}

.is-sidebar-active {
  @include to(sidebar(breakpoint)) {
    height: 100%;
    overflow: hidden;

    .sidebar {
      height: 100%;
      padding: 3rem 1rem 1rem;
    }

    .sidebar__nav {
      display: block;
    }

    .sidebar__toggle-button {
      position: fixed;
      top: 0;
      left: 0;

      border-bottom: 2px solid map-get($_sidebar, black80);
    }
  }
}

.sidebar-nav,
.sidebar-nav ul {
  padding: 0;
  margin: 0;

  list-style: none;
}

.sidebar-nav a {
  position: relative;

  display: block;
  padding-top: 0.25rem;
  padding-bottom: 0.25rem;

  color: map-get($_sidebar, level-2-item-color);

  transition: color 200ms ease;

  &::before {
    position: absolute;
    top: 0;
    left: -8px;
    z-index: 0;

    width: 0;
    height: 100%;

    background: map-get($_sidebar, item-state-bar-color);

    content: "";
    transition: width 200ms ease;
  }

  // stylelint-disable selector-no-qualifying-type
  &:hover,
  &:focus,
  &.is-active {
    color: map-get($_sidebar, emphasize-color);
    text-decoration: none;

    &::before {
      width: 0.2rem;
    }
  }
  // stylelint-enable selector-no-qualifying-type
}

.sidebar-nav--level-0 > li > a {
  @include font(large);

  padding-top: 1rem;
  padding-bottom: 1rem;
  padding-left: 0.75rem;

  color: map-get($_sidebar, emphasize-color);
  text-transform: uppercase;

  border-left: 0.25rem solid map-get($_sidebar, emphasize-color);

  transition: all 200ms ease;

  &::after {
    position: absolute;
    top: 0;
    bottom: 0;
    left: 0;

    width: 0;
    height: 0;
    margin: auto 0;

    border: 0 solid map-get($_sidebar, emphasize-color);

    content: "";
    transition: all 200ms ease;
  }

  &:hover {
    padding-left: 1.25rem;

    &::before {
      display: none;
    }
  }
}

.sidebar-nav--level-1 > li {
  padding-top: 0.5rem;
  padding-bottom: 1rem;

  &:not(:last-child) {
    margin-bottom: 0.5rem;
  }
}

.sidebar-nav--level-1 > li > a {
  font-weight: bold;
  color: map-get($_sidebar, emphasize-color);
  text-transform: uppercase;
}

.sidebar-nav--level-2 ul {
  padding-left: 0.5rem;
}

.sidebar-nav--level-2 .sidebar-nav {
  display: none;

  border-left: 1px solid map-get($_sidebar, emphasize-color);
}


.sidebar-nav__item {
  position: relative;
}


.sidebar-nav__item.is-open > .sidebar-nav {
  display: block;
}


.sidebar-nav__toggle {
  position: absolute;
  top: 0;
  right: 0;

  display: block;
  width: 2rem;
  height: 2rem;
  padding: 0;

  line-height: 2rem;

  cursor: pointer;

  background: transparent;
  border: 0;
}


.sidebar-nav__minus {
  display: none;
}

//Specificity required because the dom layout of the nav needs to be specific when it is recursively generated.
//This avoids having to refactor the nav.

.sidebar-nav__item.is-open > .sidebar-nav__toggle .sidebar-nav__minus {
  display: inline-block;
}


.sidebar-nav__item.is-open > .sidebar-nav__toggle .sidebar-nav__plus {
  display: none;
}


.sidebar-nav--level-0,
.sidebar-nav--level-1 {
  > .sidebar-nav__item > .sidebar-nav__toggle {
    display: none;
  }
}
