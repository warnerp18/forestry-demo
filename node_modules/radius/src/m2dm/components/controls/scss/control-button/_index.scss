/**
 * section: M2DM/components/controls/control-button
 * title: Control button
 *
 * activateComponent: radius-component-control-button
 *
 * abstractLink: d78f0396-a867-406b-b24d-9ae6fa27c155
 *
 * purpose: Use to perform utility tasks for the user.
 *
 * description: |
 *   Similar to the secondary CTA but with smaller font, padding and an increased radius.
 *
 *   ### Context
 *   The control button is a base component and can be used within larger components and layouts.
 *
 *   ### Behaviour
 *   The control button inherits its colours from the secondary button. It has 5 states.
 *
 *   ### Variants
 *   - `control-button--inverse`: For cases when the button will sit on dark backgrounds.
 *   - `control-button--enlarged`: Use to enlarge the clickable area of a button or link.
 *   - `control-button--icon-only`: Use to just display icon.
 *   - `control-button--info`: Use to indicate that there is info that needs to be displayed. To be used alongside text.
 *   - `control-button--processing`: Use to show operation is happening. To be used alongside text.
 *   - `control-button--success`: Use to indicate that a status has become successful. To be used alongside text.
 *   - `control-button--error`: Use to indicate that a something has failed. To be used alongside text.
 *
 *
 * layout: components/controls/scss/control-button/example
 *
 * markup: components/controls/scss/control-button/example-markup
 */

@mixin radius-component-control-button {
  $active-color: get-color(orange, contrast);
  $border-width: 1px; // stylelint-disable-line declaration-property-unit-whitelist
  $border-thick-width: 4px;
  $button-size: 2rem;
  $disabled-opacity: 0.7;
  $font-size: 1rem;
  $link-contrast-color: get-color(grey, contrast);
  $main-color: get-color(blue, contrast);
  $main-color-disabled: grayscale(darken($main-color, 5%));
  $inverse-color: get-color(white);
  $vertical-padding: ($button-size - $font-size) / 2;
  $horizontal-padding: 1rem;
  $icon-hit-area: -0.5rem;
  $icon-width: 1rem;

  @keyframes iconSpin {
    0% { transform: rotate(0deg); }
    100% { transform: rotate(360deg); }
  }

  .control-button {
    display: inline-block;
    // fallback for browsers which don't support calc
    padding: $vertical-padding $horizontal-padding;
    padding: calc(#{$vertical-padding} - #{$border-width}) $horizontal-padding;

    font-size: $font-size;
    line-height: 1;
    color: $main-color;
    text-align: center;
    text-decoration: none;
    vertical-align: middle;

    cursor: pointer;

    background-color: transparent;
    border-color: currentColor; // stylelint-disable-line declaration-property-value-whitelist
    border-style: solid;
    border-width: $border-width;
    //fallback for browsers which don't support calc
    border-radius: $button-size;
    border-radius: calc(#{$button-size} / 2 + #{$border-thick-width});


    &:hover,
    &:focus,
    &:active {
      outline: none;
    }


    &:hover {
      color: $active-color;

      transition: all 0.1s ease-in;
    }


    &:focus {
      margin: $border-width - $border-thick-width;

      border-color: get-color(purple, x-light);
      border-width: $border-thick-width;
    }


    &:active {
      color: $link-contrast-color;

      border-color: $active-color;

      transition: none;
    }


    &.is-disabled,
    &[disabled] {
      color: $main-color-disabled;

      pointer-events: none;

      border-color: $main-color-disabled;

      opacity: $disabled-opacity;
    }
  }


  .control-button--inverse {
    color: $inverse-color;
  }


  .control-button--enlarged {
    position: relative;


    &::before {
      position: absolute;
      top: $icon-hit-area;
      right: $icon-hit-area;
      bottom: $icon-hit-area;
      left: $icon-hit-area;

      content: "";
    }
  }


  .control-button--icon-only {
    width: $button-size;
    height: $button-size;
    padding: 0;

    text-align: center;


    &:focus {
      margin: 0;
    }
  }


  .control-button--info {
    color: get-color(grey, light);

    pointer-events: none;

    background: get-color(grey, 4x-light);
    border-color: get-color(grey, 2x-light);
  }


  .control-button--processing .svg-icon {
    animation-duration: 1.5s;
    animation-iteration-count: infinite;
    animation-name: iconSpin;
    animation-timing-function: cubic-bezier(0.17, 0.67, 0.83, 0.67);
  }


  .control-button--success {
    color: get-color(green);

    pointer-events: none;

    background: get-color(green, 3x-light);
    border-color: get-color(green);
  }


  .control-button--error {
    color: get-color(red);

    pointer-events: none;

    background: get-color(red, 3x-light);
    border-color: get-color(red);
  }


  @import "./icon-button";
}
