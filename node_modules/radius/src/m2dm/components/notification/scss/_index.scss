/**
 * section: M2DM/components/notification
 * title: Notification
 *
 * activateComponent: radius-component-notification
 *
 * warningContent: This component is a **candidate component** and before being reused it needs to be agreed by the design team.
 *
 * purpose: Use to communicate an alert or a status change to the user without overtaking the page or disrupting the user from performing actions on the page.
 *
 * description: |
 *    <strong>N.B.</strong> This is a candidate component and will soon be replaced by the Notice component, once all of the variants have been created for the Notice. As this candidate component will soon be deprecated, please use the [Notice component](/M2DM/components/notice/) instead, where possible.
 *    It should clearly and succinctly convey the main message, and if applicable, guide the user on the consequence or the best action the user can take next.<br><br>
 *    Notification bars are not “sticky”, so as the user scrolls down, it may disappear out of view. Both static and animated bars will load with the page, so they should show immediately once the page is loaded.<br><br>
 *    Notification bars always live at the top of the page, right under the navigation bar. They can either be:
 *    <ul>
 *      <li>a <strong>static bar</strong> that stays on the page until a condition/status has changed, or</li>
 *      <li>a <strong>temporary animated bar</strong> that shows for 10 seconds, and then slides up to disappear. Add a [data-js-notification-collapse] on the block element to make the notification collapsable.</li>
 *    </ul>
 *    <br><br>
 *    Status variations (see subcategories for usage examples and descriptions):
 *    <ul>
 *      <li>Success</li>
 *      <li>Error/failure</li>
 *      <li>Attention</li>
 *      <li>Information</li>
 *    </ul>
 *
 *    To avoid “alert fatigue” (where user starts ignoring alerts and notifications because they see it frequently), please only use a notification bar when it requires user’s attention or action on something.
 *
 * markup: components/notification/example
 */


/**
 * section: M2DM/components/notification/information
 * title: Information
 *
 * description: |
 *    Use this to inform the user of something that is not urgent and doesn’t require any action. This is usually a system-wide notification about their account. Choose static or temporary animated appropriately based on use case.
 *
 * markup: components/notification/example-information
 */


/**
 * section: M2DM/components/notification/attention
 * title: Attention
 *
 * description: |
 *    Use this to convey there is an issue that requires attention, but maybe not immediate action. Choose static or temporary animated appropriately based on use case.
 *
 * markup: components/notification/example-attention
 */


/**
 * section: M2DM/components/notification/success
 * title: Success
 *
 * description: |
 *    Use this to convey something was successfully completed or changed to the user. This should be a temporary animation that shows for 10 seconds and goes away. Usually success and confirmations are straight-forward, so they should be one-line, short and sweet.
 *
 * markup: components/notification/example-success
 */


/**
 * section: M2DM/components/notification/error
 * title: Error
 *
 * description: |
 *    Use this to convey something was unsuccessful, and requires immediate attention or action. Choose static or temporary animated appropriately based on use case. Try not to have vague copy like “Something went wrong”, but rather informational and actionable copy.
 *
 * markup: components/notification/example-error
 */


@mixin radius-component-notification {
  $breakpoint: tablet-small;

  .notification {
    overflow: hidden;

    background: get-color(yellow, light);

    opacity: 1;
    transition: all 500ms ease;
    transition-property: height, opacity;
    will-change: height, opacity;


    @include to($breakpoint) {
      text-align: center;
    }


    &.is-collapsed {
      height: 0 !important; // stylelint-disable-line declaration-no-important

      opacity: 0;
    }
  }


  .notification__content {
    @include page-grid;

    padding: 1rem 0;

    @include from($breakpoint) {
      @include columns-no-padding(1 5);

      align-items: center;
      width: auto;
    }

    @include from(desktop-large) {
      @include columns-no-padding(1 7);

      width: auto;
    }
  }


  .notification__icon {
    padding-right: 0.5rem;
    padding-left: 0.5rem;
  }


  .notification__icon > * {
    display: block;
    width: 100%;
    max-width: 2.5rem;
    max-height: 2.5rem;
    margin: 0 auto;


    @include to($breakpoint) {
      margin-bottom: 0.5rem;
    }


    @include from($breakpoint) {
      max-width: 3.5rem;
    }
  }


  .notification__title {
    @include font(large);

    margin: 0;

    font-family: get-config(font-family-primary);
    font-weight: bold;
  }


  .notification__copy {
    margin: 0;


    @include to($breakpoint) {
      margin-bottom: 1rem;
    }
  }


  .notification__actionable {
    @include from($breakpoint) {
      display: flex;
      align-items: center;
      justify-content: space-between;
      width: 100%;
    }
  }

  .notification__actionable-copy {
    @include from($breakpoint) {
      padding-right: 1.5rem;
    }
  }


  .notification__actionable-cta {
    white-space: nowrap;
  }


  .notification--success {
    color: get-color(white);

    background: get-color(green, contrast);
  }


  .notification--error {
    color: get-color(white);

    background: get-color(red);
  }
}
