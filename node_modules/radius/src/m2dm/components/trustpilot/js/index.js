/* eslint-disable max-len, no-plusplus, array-callback-return */
export default () => {
  const isLocalDataExpired = (data, lastUpdated) => {
    if (!data || !lastUpdated) return false;

    const dataExpirationTime = 1000 * 60 * 60 * 24 * 1; // refresh every 1 days
    const dataExpired = (Date.now() > (lastUpdated + dataExpirationTime));

    return dataExpired;
  };


  const getLocalData = () => {
    const localData = JSON.parse(localStorage.getItem('trustpilot_api_data'));
    const localDataLastUpdated = Number(localStorage.getItem('trustpilot_api_data_last_updated'));
    const localDataExpired = isLocalDataExpired(localData, localDataLastUpdated);
    
    return {
      localData,
      localDataExpired,
    };
  };


  const setLocalData = (data) => {
    localStorage.setItem('trustpilot_api_data', JSON.stringify(data));
    localStorage.setItem('trustpilot_api_data_last_updated', Date.now());
  };


  const removeAllComponents = (components) => {
    components.forEach((item) => {
      item.parentNode.removeChild(item);
    });
  };


  const fetchTrustPilotData = () => {
    const dataPath = 'https://api.trustpilot.com/v1/business-units/4fa92f2600006400051522e5';
    const tpApiKey = 'AV9QXFKuib9jYaJ2z1M5ukg8QQYB31l1';
    const url = `${dataPath}?apikey=${tpApiKey}`;

    return fetch(url)
      .then(response => response.json())
      .then((data) => {
        setLocalData(data);
        return data;
      });
  };


  const renderTrustPilotComponents = (data, components) => {
    // remove all components if the stars count has dropped to 3 or below
    if (data.stars <= 3) {
      removeAllComponents(components);
      return;
    }

    components.forEach((item) => {
      const stars = Array.from(item.querySelectorAll('[data-js-trustpilot-stars]'));
      const reviewCount = Array.from(item.querySelectorAll('[data-js-trustpilot-review-count]'));
      const trustscore = Array.from(item.querySelectorAll('[data-js-trustpilot-trustscore]'));
      const headlineRating = Array.from(item.querySelectorAll('[data-js-trustpilot-headline-rating]'));

      stars.forEach((el) => {
        el.innerHTML = '';

        for (let i = 0; i < data.stars; i++) {
          const img = document.createElement('span');
          img.className = 'trustpilot__star';
          el.appendChild(img);
        }
      });

      reviewCount.forEach(el => (el.textContent = data.numberOfReviews.total)); // eslint-disable-line no-return-assign
      trustscore.forEach(el => (el.textContent = data.trustScore)); // eslint-disable-line no-return-assign
      headlineRating.forEach((el) => { // eslint-disable-line no-return-assign
        const text5stars = el.getAttribute('data-content-5stars');
        const text4stars = el.getAttribute('data-content-4stars');

        if (data.stars === 5) {
          el.textContent = text5stars;
        } else if (data.stars === 4) {
          el.textContent = text4stars;
        }
      });

      item.classList.add('is-visible');
    });
  };


  const start = () => {
    const components = Array.from(document.querySelectorAll('[data-js-trustpilot-api]'));
    // if there's no trustpilot components, abort here
    if (!components.length) return;

    const { localData, localDataExpired } = getLocalData();

    if (localData && !localDataExpired) {
      renderTrustPilotComponents(localData, components);
    } else {
      fetchTrustPilotData()
        .then(data => renderTrustPilotComponents(data, components))
        .catch((err) => {
          removeAllComponents(components);
          throw new Error(err);
        });
    }
  };


  return {
    getLocalData,
    setLocalData,
    isLocalDataExpired,
    fetchTrustPilotData,
    renderTrustPilotComponents,
    start,
  };
};
