/**
 * section: M2DM/components/notice
 * title: Notice
 *
 * activateComponent: radius-component-notice
 *
 * abstractLink: 4502b62c-19ea-4415-9178-4f4a669cd9b4
 *
 * purpose: Use to communicate change, provide feedback as a result of a user’s action or to convey information regarding a potential action.
 *
 * description: |
 *    This component should clearly and succinctly convey the main message, and if applicable, guide the user on the consequence or the best action the user can take next, but without overtaking the page or disrupting the user from performing actions on the page.<br><br>
 *    They can be either static, dismissable or automatically removed after a fixed period of time.<br><br>
 *    Notice bars are not “sticky”, so as the user scrolls down, it may disappear out of view. Both static and animated bars will load with the page, so they should show immediately once the page is loaded.<br><br>
 *    <strong>N.B</strong> when all variants of this notice component have been built it will be used instead of the current notification component, which is a candidate component that will be deprecated over time in favour of the notice.<br><br>
 *
 *    Status variations (see subcategories for usage examples and descriptions):
 *    <ul>
 *      <li>Default (general information)</li>
 *      <li>Success - use this to convey something was successfully completed or changed to the user. Usually success and confirmations are straight-forward, so they should be one-line, short and sweet.</li>
 *      <li>Error/failure - use this to convey something was unsuccessful, and requires immediate attention or action. Choose static or temporary animated appropriately based on use case. Try not to have vague copy like “Something went wrong”, but rather informational and actionable copy.</li>
 *      <li>Attention/warning - use this to convey to the user that there is an issue that requires attention, such as a warning or note, that might not require immediate action.</li>
 *    </ul>
 *
 *    Notice width variations<br><br>
 *    There will be two variants of the notice in terms of the space it occupies, one that spans the content of the parent container, and one that fits to the width of the contained content.
 *    <ul>
 *      <li>Default - spans full width of the parent container</li>
 *      <li>Compact - width determined by the content of the notice, rather than the width of the parent element. For notices that require less prominance/attention. Often used to highlight the result of a user action e.g. uploading a document, saving progress in an application or loss of connection.</li>
 *    </ul>
 *
 *    To avoid “alert fatigue” (where user starts ignoring alerts and notifications because they see it frequently), please only use a notification bar when it requires user’s attention or action on something.<br><br>
 *    <strong>N.B.</strong> When all variants have been built - this component will replace the notification component that is a currently a candidate component and the notification component will be deprecated.
 *
 * layout: components/notice/example-layout
 *
 * markup: components/notice/notice
 * markup-icon: components/notice/notice-icon
 * markup-title: components/notice/notice-title
 * markup-title-icon: components/notice/notice-title-icon
 */

@mixin radius-component-notice {
  $vertical-space: 0.5rem;
  $horizontal-space: 1rem;
  $icon-copy-spacing: 0.5rem;


  .notice {
    overflow: hidden;

    background: get-color(grey, 4x-light);
    border: 1px solid get-color(grey, 2x-light); // stylelint-disable-line declaration-property-unit-whitelist
    border-radius: 1.5rem;


    .notice__support-icon {
      color: get-color(grey, x-light);
    }
  }


  .notice__content {
    display: flex;
    align-items: center;

    padding: $vertical-space $horizontal-space;
  }


  .notice__content .control-icon {
    margin-left: auto;
  }


  .notice__support-icon {
    flex-shrink: 0;
    width: 1.5rem;
    height: 1.5rem;
  }


  .notice__support-icon,
  .notice__support-icon + .notice__copy {
    margin-right: $icon-copy-spacing;
  }


  .notice__copy > * {
    margin: 0;
  }


  .notice__copy,
  .notice__title {
    @include font(medium);
  }


  .notice--compact,
  .notice--compact .notice__content {
    display: inline-flex;
  }


  .notice--success {
    background: get-color(green, 3x-light);

    border-color: get-color(green);


    .notice__support-icon,
    .notice__title {
      color: get-color(green);
    }
  }


  .notice--error {
    background: get-color(red, 3x-light);

    border-color: get-color(red);


    .notice__support-icon,
    .notice__title {
      color: get-color(red);
    }
  }


  .notice--attention {
    background-color: get-color(yellow, 3x-light);

    border-color: get-color(yellow);
  }


  .no-flexbox {
    .notice--compact {
      display: inline-block;
    }
  }
}
