import React from 'react';
import PropTypes from 'prop-types';
import NumberFormat from 'react-number-format';

function getLocalConfig(locale) {
  switch (locale) {
    case 'en-GB':
      return {
        thousandSeparator: ',',
        prefix: '£',
      };
    case 'en-US':
      return {
        thousandSeparator: ',',
        prefix: '$',
      };
    default:
      return {
        thousandSeparator: '.',
        decimalSeparator: ',',
        prefix: '',
        suffix: '€',
      };
  }
}

const LoanAmountNumericInput = ({
  locale, errorMessage, updateLoanAmount, loanAmount,
}) => {
  const localConfig = getLocalConfig(locale);

  return (
    <div>
      <NumberFormat
        onValueChange={ (data) => {
          updateLoanAmount(parseInt(data.value, 10) || 0);
        }}
        value={loanAmount}
        {...localConfig}
      />
      { errorMessage && <div data-test-error-message>{ errorMessage }</div> }
    </div>
  );
};

LoanAmountNumericInput.propTypes = {
  loanAmount: PropTypes.number,
  locale: PropTypes.string,
  updateLoanAmount: PropTypes.func,
  errorMessage: PropTypes.string,
};

export default LoanAmountNumericInput;
