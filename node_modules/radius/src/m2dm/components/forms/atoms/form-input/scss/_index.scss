/**
 * section: M2DM/components/forms/atoms/form-input
 * title: Form input
 *
 * warningContent: Must not be used on its own. Should be coupled with other form atoms inside a `form-element` component.
 *
 * purpose: Use to enable users to provide information.
 *
 * description: |
 *   The information can be provided through a range of different types of input fields (*e.g* checkboxes, date, email etc.).<br><br>
 *
 *   Depending on the value of its `type` attribute, the functionality of the input can change considerably.<br><br>
 *
 *   The input usually consists of an icon that represents a visual indication of the type of action that needs to be performed. In general, the icon has usually a decorative purpose but it can also be used as a control allowing the user to interact with the input. In this case, the variant class `form-input__icon--control` needs to be added on the `.form-input__icon` element.
 *
 * markup: components/forms/atoms/form-input/layout
 */

@mixin radius-component-form-input {
  $input-height: 3rem;

  ::placeholder {
    color: get-color(grey, x-light);
  }


  .form-input {
    position: relative;

    display: block;
    width: 100%;
  }


  .form-input__element {
    @include font(medium);

    display: block;
    width: 100%;
    height: $input-height;
    padding: 0.75rem 1rem;

    color: get-color(grey, base);

    background-color: get-color(white);

    border: 0;
    border-radius: 0;

    box-shadow: 0 0 0 1px get-color(grey, 2x-light);

    appearance: none;


    &:hover {
      box-shadow: 0 0 0 1px get-color(grey, light), 0 0 0 3px get-color(grey, 3x-light);
    }


    &:focus {
      outline: none;
      box-shadow: 0 0 0 1px get-color(grey), 0 0 0 3px get-color(blue, x-light);
    }
  }


  .is-error .form-input__element {
    border-color: get-color(red);
  }


  .form-input--icon .form-input__element {
    padding-right: $input-height - 0.5rem;
  }


  .form-input__icon {
    position: absolute;
    top: 0;
    right: 0.75rem;

    height: $input-height;
    padding: 0;

    line-height: $input-height;
    color: get-color(grey, x-light);


    &:not(.form-input__icon--control) {
      pointer-events: none;
    }
  }
}
