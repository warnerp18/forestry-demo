import stepCardList from '../stepCardList';

describe('stepCardList', () => {
  const CLASS_INACTIVE = 'is-inactive';

  let list1Cards;

  beforeEach(() => {
    const fixture = `
      <div id="list-1" data-js-step-card-list>
        <div id="card-1" data-js-step-card>
          <button type="button" id="list-1-continue-1" data-js-step-card-continue></button>
        </div>
        <div id="card-2" data-js-step-card>
          <button type="button" id="list-1-continue-2" data-js-step-card-continue></button>
        </div>
      </div>
    `;

    document.body.innerHTML = fixture;

    stepCardList();

    list1Cards = Array.from(document.querySelectorAll('#list-1 > *'));
  });

  describe('when the page loads', () => {
    it('should not disable the first card', () => {
      const firstCard = list1Cards[0];
      expect(firstCard.classList.contains(CLASS_INACTIVE)).toEqual(false);
    });

    it('and make all other cards disabled', () => {
      const otherCardCount = list1Cards.slice(1).length;
      const otherCardsInactive = list1Cards.slice(1).filter(card => card.classList.contains(CLASS_INACTIVE));

      expect(otherCardsInactive.length).toEqual(otherCardCount);
    });
  });

  describe('when clicking on step card continue button', () => {
    let card1;
    let card2;

    beforeEach(() => {
      card1 = document.querySelector('#card-1');
      card2 = document.querySelector('#card-2');
    });

    describe('and is not the last card', () => {
      beforeEach(() => {
        card1.classList.remove(CLASS_INACTIVE);
        card2.classList.add(CLASS_INACTIVE);

        const action = document.querySelector('#list-1-continue-1');

        action.dispatchEvent(new Event('click'));
      });

      it('should enable the next card', () => {
        expect(card2.classList.contains(CLASS_INACTIVE)).toEqual(false);
      });
    });

    describe('and is the last card', () => {
      let action;

      beforeEach(() => {
        card1.classList.add(CLASS_INACTIVE);
        card2.classList.remove(CLASS_INACTIVE);

        action = document.querySelector('#list-1-continue-2');

        action.dispatchEvent(new Event('click'));
      });

      it('should not try to enable the next card', () => {
        expect(() => {
          action.dispatchEvent(new Event('click'));
        }).not.toThrow();
      });
    });
  });
});
